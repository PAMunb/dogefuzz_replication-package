[0;32m> Created "fuzzMe"[0m
[0;32m> To fuzz contracts:[0m
  chmod +x fuzzMe
  ./fuzzMe
contracts/DrainMe.sol:87:5: Warning: This declaration shadows an existing declaration.
    uint256 secret = uint256(hash);
    ^------------^
contracts/DrainMe.sol:26:1: The shadowed declaration is here:
uint256 public secret;
^-------------------^

contracts/DrainMe.sol:86:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(blockhash(block.number-1));
                   ^----------------------------------^
contracts/DrainMe.sol:86:20: Warning: The provided argument of type bytes32 is not implicitly convertible to expected type bytes memory.
    bytes32 hash = keccak256(blockhash(block.number-1));
                   ^----------------------------------^
contracts/DrainMe.sol:100:2: Warning: Return value of low-level calls not used.
	firstTarget.call.value(msg.value)();
	^---------------------------------^
contracts/DrainMe.sol:106:2: Warning: Return value of low-level calls not used.
	secondTarget.call.value(msg.value)();
	^----------------------------------^
contracts/DrainMe.sol:133:2: Warning: Return value of low-level calls not used.
	owner.call.value(1 wei)();
	^-----------------------^
assets/NormalAttacker.sol:5:7: Warning: No visibility specified. Defaulting to "public". 
      function() payable {
      ^ (Relevant source part starts here and spans across multiple lines).
assets/ReentrancyAttacker.sol:8:25: Warning: Return value of low-level calls not used.
                        msg.sender.call(bytes4(255));
                        ^--------------------------^
assets/ReentrancyAttacker.sol:5:7: Warning: No visibility specified. Defaulting to "public". 
      function() payable {
      ^ (Relevant source part starts here and spans across multiple lines).
>> Fuzz DrainMe
