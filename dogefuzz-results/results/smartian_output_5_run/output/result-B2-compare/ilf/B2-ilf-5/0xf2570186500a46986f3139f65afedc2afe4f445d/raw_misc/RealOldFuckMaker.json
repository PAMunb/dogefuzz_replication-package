{
  "contractName": "RealOldFuckMaker",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "number",
          "type": "uint32"
        }
      ],
      "name": "makeOldFucks",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"number\",\"type\":\"uint32\"}],\"name\":\"makeOldFucks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/test/ilf-workspace/proj/contracts/0xf2570186500a46986f3139f65afedc2afe4f445d.sol\":\"RealOldFuckMaker\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/test/ilf-workspace/proj/contracts/0xf2570186500a46986f3139f65afedc2afe4f445d.sol\":{\"keccak256\":\"0xa61fe311b37a557cd727cb3301f756a7044e11db6daf0b7d1db5092c0d106fc1\",\"urls\":[\"bzzr://33848319132ee319804f2c9d1b2613b81e20c8968506ea11265c846968bc1f3e\"]}},\"version\":1}",
  "bytecode": "0x608060405273c63e7b1dece63a77ed7e4aeef5efb3b05c81438d6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b5061019f806100746000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063b535c74114610046575b600080fd5b34801561005257600080fd5b50610077600480360381019080803563ffffffff169060200190929190505050610079565b005b60008090505b8163ffffffff168163ffffffff16101561016f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f67697665426c6f636b5265776172642829000000000000000000000000000000815250601101905060405180910390207c010000000000000000000000000000000000000000000000000000000090046040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303816000875af19250505050808060010191505061007f565b50505600a165627a7a723058205151eb90e694be7083f34511e6e6b9b4ea6add8b7687b7f9e7a5c338da3d6f340029",
  "deployedBytecode": "0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063b535c74114610046575b600080fd5b34801561005257600080fd5b50610077600480360381019080803563ffffffff169060200190929190505050610079565b005b60008090505b8163ffffffff168163ffffffff16101561016f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f67697665426c6f636b5265776172642829000000000000000000000000000000815250601101905060405180910390207c010000000000000000000000000000000000000000000000000000000090046040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303816000875af19250505050808060010191505061007f565b50505600a165627a7a723058205151eb90e694be7083f34511e6e6b9b4ea6add8b7687b7f9e7a5c338da3d6f340029",
  "sourceMap": "110:400:0:-;;;158:42;143:57;;;;;;;;;;;;;;;;;;;;110:400;8:9:-1;5:2;;;30:1;27;20:12;5:2;110:400:0;;;;;;;",
  "deployedSourceMap": "110:400:0:-;;;;;;;;;;;;;;;;;;;;;;;;283:224;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:224:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:8;359:1;355:5;;350:150;366:6;362:10;;:1;:10;;;350:150;;;444:4;;;;;;;;;;;:9;;461:25;;;;;;;;;;;;;;;;;;;444:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;374:3;;;;;;;350:150;;;283:224;;:::o",
  "source": "/*\r\n * @source: etherscan.io \r\n * @author: -\r\n * @vulnerable_at_lines: 18\r\n */\r\n\r\npragma solidity ^0.4.16;\r\n\r\ncontract RealOldFuckMaker {\r\n    address fuck = 0xc63e7b1DEcE63A77eD7E4Aeef5efb3b05C81438D;\r\n    \r\n    // this can make OVER 9,000 OLD FUCKS\r\n    // (just pass in 129)\r\n    function makeOldFucks(uint32 number) {\r\n        uint32 i;\r\n        for (i = 0; i < number; i++) {\r\n            // <yes> <report> UNCHECKED_LL_CALLS\r\n            fuck.call(bytes4(sha3(\"giveBlockReward()\")));\r\n        }\r\n    }\r\n}",
  "sourcePath": "/home/test/ilf-workspace/proj/contracts/0xf2570186500a46986f3139f65afedc2afe4f445d.sol",
  "ast": {
    "absolutePath": "/home/test/ilf-workspace/proj/contracts/0xf2570186500a46986f3139f65afedc2afe4f445d.sol",
    "exportedSymbols": {
      "RealOldFuckMaker": [
        36
      ]
    },
    "id": 37,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "82:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 36,
        "linearizedBaseContracts": [
          36
        ],
        "name": "RealOldFuckMaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "fuck",
            "nodeType": "VariableDeclaration",
            "scope": 36,
            "src": "143:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307863363365376231444563453633413737654437453441656566356566623362303543383134333844",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "158:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xc63e7b1DEcE63A77eD7E4Aeef5efb3b05C81438D"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "320:187:0",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 35,
                      "src": "331:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 9,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "331:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "331:8:0"
                },
                {
                  "body": {
                    "id": 32,
                    "nodeType": "Block",
                    "src": "379:121:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "67697665426c6f636b5265776172642829",
                                      "id": 27,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "466:19:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_fcd6e339287e74da3475ec1433a3672c2cb2efc97e7208df8d4de31a6a479125",
                                        "typeString": "literal_string \"giveBlockReward()\""
                                      },
                                      "value": "giveBlockReward()"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_fcd6e339287e74da3475ec1433a3672c2cb2efc97e7208df8d4de31a6a479125",
                                        "typeString": "literal_string \"giveBlockReward()\""
                                      }
                                    ],
                                    "id": 26,
                                    "name": "sha3",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 118,
                                    "src": "461:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 28,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "461:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 25,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "454:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes4_$",
                                  "typeString": "type(bytes4)"
                                },
                                "typeName": "bytes4"
                              },
                              "id": 29,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "454:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22,
                              "name": "fuck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4,
                              "src": "444:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 24,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "444:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
                              "typeString": "function () payable returns (bool)"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "444:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 31,
                        "nodeType": "ExpressionStatement",
                        "src": "444:44:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 16,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "362:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 17,
                      "name": "number",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "366:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "362:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 12,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "355:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "359:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "355:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 15,
                    "nodeType": "ExpressionStatement",
                    "src": "355:5:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "374:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "374:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 21,
                    "nodeType": "ExpressionStatement",
                    "src": "374:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "350:150:0"
                }
              ]
            },
            "documentation": null,
            "id": 35,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "makeOldFucks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "305:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "304:15:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:0"
            },
            "scope": 36,
            "src": "283:224:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 37,
        "src": "110:400:0"
      }
    ],
    "src": "82:428:0"
  },
  "legacyAST": {
    "absolutePath": "/home/test/ilf-workspace/proj/contracts/0xf2570186500a46986f3139f65afedc2afe4f445d.sol",
    "exportedSymbols": {
      "RealOldFuckMaker": [
        36
      ]
    },
    "id": 37,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "82:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 36,
        "linearizedBaseContracts": [
          36
        ],
        "name": "RealOldFuckMaker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "fuck",
            "nodeType": "VariableDeclaration",
            "scope": 36,
            "src": "143:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "143:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307863363365376231444563453633413737654437453441656566356566623362303543383134333844",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "158:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xc63e7b1DEcE63A77eD7E4Aeef5efb3b05C81438D"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "320:187:0",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 35,
                      "src": "331:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 9,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "331:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "331:8:0"
                },
                {
                  "body": {
                    "id": 32,
                    "nodeType": "Block",
                    "src": "379:121:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "67697665426c6f636b5265776172642829",
                                      "id": 27,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "466:19:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_fcd6e339287e74da3475ec1433a3672c2cb2efc97e7208df8d4de31a6a479125",
                                        "typeString": "literal_string \"giveBlockReward()\""
                                      },
                                      "value": "giveBlockReward()"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_fcd6e339287e74da3475ec1433a3672c2cb2efc97e7208df8d4de31a6a479125",
                                        "typeString": "literal_string \"giveBlockReward()\""
                                      }
                                    ],
                                    "id": 26,
                                    "name": "sha3",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 118,
                                    "src": "461:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                      "typeString": "function () pure returns (bytes32)"
                                    }
                                  },
                                  "id": 28,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "461:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 25,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "454:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes4_$",
                                  "typeString": "type(bytes4)"
                                },
                                "typeName": "bytes4"
                              },
                              "id": 29,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "454:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 22,
                              "name": "fuck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4,
                              "src": "444:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 24,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "444:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
                              "typeString": "function () payable returns (bool)"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "444:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 31,
                        "nodeType": "ExpressionStatement",
                        "src": "444:44:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 16,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "362:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 17,
                      "name": "number",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "366:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "362:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 12,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "355:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "359:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "355:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 15,
                    "nodeType": "ExpressionStatement",
                    "src": "355:5:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "374:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "374:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 21,
                    "nodeType": "ExpressionStatement",
                    "src": "374:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "350:150:0"
                }
              ]
            },
            "documentation": null,
            "id": 35,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "makeOldFucks",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "305:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "304:15:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:0"
            },
            "scope": 36,
            "src": "283:224:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 37,
        "src": "110:400:0"
      }
    ],
    "src": "82:428:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Linux.g++"
  },
  "networks": {
    "1712325310345": {
      "events": {},
      "links": {},
      "address": "0x724F259aEe54E29b78536457a05BB992C771D252",
      "transactionHash": "0xa49b76368f515223f676e1e32a330b497f21d4457550c0d6e467fe9f688da985"
    }
  },
  "schemaVersion": "3.0.15",
  "updatedAt": "2024-04-05T13:55:16.737Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}